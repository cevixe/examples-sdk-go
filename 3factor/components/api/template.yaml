AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 3 Factor Cevixe Example - API

Resources:
  GraphqlApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: "GraphqlApi"
      AuthenticationType: API_KEY
      AdditionalAuthenticationProviders:
        - AuthenticationType: AWS_IAM
  GraphqlApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt GraphqlApi.ApiId
  GraphqlApiSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt GraphqlApi.ApiId
      Definition: |
        type Query {
          products(nextToken: String, limit: Int = 20): ProductPage!
          productById(id: ID!): Product
        }

        type Mutation {
          createProduct(input: CreateProductInput!): ID!
          updateProduct(input: UpdateProductInput!): ID!
          publishEvent( transaction: ID!,
                        sourceId: ID!,
                        sourceType: String!,
                        sourceOwner: String!,
                        eventType: String!,
                        eventAuthor: String!,
                        eventObject: AWSJSON!): EventObject!
          @aws_iam
        }

        type ProductPage {
          nextToken: String
          items: [Product]!
        }

        type Product {
          id: ID!
          name: String!
          description: String!
          price: Float!
        }

        input CreateProductInput {
          name: String!
          description: String!
          price: Float!
        }

        input UpdateProductInput {
          id: ID!
          description: String
          price: Float
        }

        type Subscription {
          onSourceEvent(
                  sourceType:  String!,
                  sourceId:    ID,
                  sourceOwner: String): EventObject
          @aws_subscribe(mutations: ["publishEvent"])
          onTransactionEvent(
                  transaction: ID!,
                  eventType:   String,
                  eventAuthor: String): EventObject
          @aws_subscribe(mutations: ["publishEvent"])
        }

        type EventObject @aws_iam {
          transaction: ID!
          eventId: ID!
          eventType: String!
          eventTime: AWSDateTime!
          eventAuthor: String!
          eventPayload: AWSJSON!
          sourceId: ID!
          sourceType: String!
          sourceTime: AWSDateTime!
          sourceOwner: String!
          sourceState: AWSJSON!
        }

Outputs:
  GraphqlApiArn:
    Value: !GetAtt GraphqlApi.Arn
    Export:
      Name: GraphqlApiArn
  GraphqlApiId:
    Value: !GetAtt GraphqlApi.ApiId
    Export:
      Name: GraphqlApiId
  GraphqlApiUrl:
    Value: !GetAtt GraphqlApi.GraphQLUrl
    Export:
      Name: GraphqlApiUrl